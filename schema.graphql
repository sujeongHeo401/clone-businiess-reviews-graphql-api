
# These type definitions have been generated from your Neo4j database.

# Here are some Neo4j specific scalars that you can use to map to native Neo4j types:
scalar Point
scalar Date
scalar DateTime
scalar Long

# Edit these GraphQL type definitions below to change your GraphQL API
# You can add custom logic defined with Cypher using the @cypher GraphQL schema directive
# You can refer to the docs at https://grandstack.io
type User {
   _id: Long!
   name: String!
   userId: String!
   wrote: [Review] @relation(name: "WROTE", direction: OUT)
   friends: [User] @cypher(statement: "MATCH (u:User) RETURN u")
}

type Review {
   _id: Long!
   date: Date!
   reviewId: String!
   stars: Float!
   text: String
   reviews: [Business] @relation(name: "REVIEWS", direction: OUT)
   users: [User] @relation(name: "WROTE", direction: IN)
}

type Category {
   _id: Long!
   name: String!
   businesss: [Business] @relation(name: "IN_CATEGORY", direction: IN)
   numOfBusiness: Int! @cypher(statement:"""
      MATCH (this)<-[:IN_CATEGORY]-(b:Business) with b RETURN COUNT(b)
   """)
}

type Business {
   _id: Long!
   averageStars: Float! @cypher(statement:"MATCH (this)<-[:REVIEWS]-(r:Review) RETURN avg(r.stars)") # add scalar field
   recommended(first: Int = 1): [Business] @cypher(statement: """
      MATCH (this)<-[:REVIEWS]-(:Review)<-[:WROTE]-(:User)-[:WROTE]->(:Review)-[:REVIEWS]->(rec:Business)
      WITH rec, COUNT(*) AS score
      RETURN rec ORDER BY score DESC LIMIT $first
    """)
   waitTime: Int! @neo4j_ignore
   address: String!
   businessId: String!
   city: String!
   location: Point!
   name: String!
   state: String!
   in_category: [Category] @relation(name: "IN_CATEGORY", direction: OUT)
   reviews: [Review] @relation(name: "REVIEWS", direction: IN)
}

type Query {
    fuzzyBusinessByName(searchString: String): [Business] @cypher(
      statement: """
        CALL db.index.fulltext.queryNodes( 'businessNameIndex', $searchString+'~')
        YIELD node RETURN node
      """
   )
}
enum BusinessOrdering {
  businessId_asc
  businessId_desc
  name_asc
  name_desc
  city_asc
  city_desc
  state_asc
  state_desc
  address_asc
  address_desc
  _id_asc
  _id_desc
}




